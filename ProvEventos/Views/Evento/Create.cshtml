@model ProvEventos.Models.EventoViewModels

@{
    ViewBag.Title = "Create";
}

<h2>Agregar Evento</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Evento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            @if(Model.TiposDeEvento!= null){ 
                <div class="col-md-10">
                    @Html.DropDownListFor(x => Model.Tipo, Model.TiposDeEvento, String.Empty, new { htmlAttributes = new { @class = "form-control", @id = "typeSelector" } })
                    @Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" })
                </div>
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEvento, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group" id="OtherSpecifyFormGroup">
            @Html.LabelFor(model => model.Servicios, new { @class = "control-label col-md-4" })
            <div class="col-md-4 sbchanged">
                @Html.TextBoxFor(model => model.Servicios, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Servicios, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#OtherSpecifyFormGroup").hide();
            $("#typeSelector").on('change', function () {
                var value = document.getElementById("typeSelector").value;
                if (value != "" || value != "0") {
                    $("#OtherSpecifyFormGroup").show();
                }
                else {
                    $("#OtherSpecifyFormGroup").hide();
                }
            });
        })
    </script>
}