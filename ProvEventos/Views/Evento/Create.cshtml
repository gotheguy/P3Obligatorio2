@model ProvEventos.Models.EventoViewModels

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Evento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            @if(Model.TiposDeEvento!= null){ 
                <div class="col-md-10">
                    @Html.DropDownListFor(x => Model.Tipo, Model.TiposDeEvento, String.Empty, new { @class = "form-control", @id = "typeSelector" })
                    @Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" })
                </div>
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEvento, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.FechaEvento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="OtherSpecifyFormGroup">
            @Html.LabelFor(model => model.Servicios, new { @class = "control-label col-md-4" })
            <div class="col-md-4 sbchanged">
                @*@Html.DropDownListFor(x => Model.Servicios, Model.ServiciosList, String.Empty, new { @class = "form-control", @id = "serviceSelector" })*@
                <select id="ddlcity" name="ddlcity" style="width: 200px"></select>

            </div>
            <input type="submit" value="AddService" class="btn btn-default" />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#OtherSpecifyFormGroup").hide();
            alert($("#typeSelector"));
            $("#typeSelector").on('change', function () {
                var value = document.getElementById("typeSelector").value;
                if (value != "" || value != 0) {
                    var str = this.options[this.selectedIndex].value;
                    $.ajax('@Url.Action("GetServiceData", "Evento")', {
                        type: 'POST',
                        dataType: 'json',
                        data : {'typeID': str }.
                        success: function(data, status, jqXHR) {
                            if ("success" === status) {
                                $("#OtherSpecifyFormGroup").show();
                                var markup = "<option value='0'>Select service</option>";
                                for (var x = 0; x < data.length; x++) {
                                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                                }
                                $("#ddlcity").html(markup).show();
                            } else {
                                alert('This Product ID is not valid. Try again!');
                            }
                        }
                    });
                }
                else {
                    $("#OtherSpecifyFormGroup").hide();
                }
            });
        })
    </script>

}